/*!
 * angular-schema-form-material
 * @version 1.0.0-alpha.3
 * @date Wed, 29 Nov 2017 03:30:33 GMT
 * @link https://github.com/json-schema-form/angular-schema-form-material
 * @license MIT
 * Copyright (c) 2014-2017 JSON Schema Form
 */
!function(e){function t(r){if(a[r])return a[r].exports;var l=a[r]={i:r,l:!1,exports:{}};return e[r].call(l.exports,l,l.exports,t),l.l=!0,l.exports}var a={};t.m=e,t.c=a,t.i=function(e){return e},t.d=function(e,a,r){t.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=28)}([function(e,t){var a="/material/default.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,"<md-input-container ng-class=\"['schema-form-' + form.type, form.htmlClass, {'has-error': hasError(), 'has-success': hasSuccess(), 'has-feedback': form.feedback !== false}]\" sf-messages sf-layout sf-material-class=md-input-has-value> <label ng-show=showTitle() for={{::form.key|sfCamelKey}}>{{::form.title}}</label> <input sf-field-model ng-show=::form.key type={{::form.type}} step=any sf-changed=form placeholder={{::form.placeholder}} id={{::form.key|sfCamelKey}} ng-class=::form.fieldHtmlClass sf-type-parser=form.schema ng-disabled=::form.readonly schema-validate=form name={{::form.key|sfCamelKey}} aria-describedby={{::form.key|sfCamelKey}}Status /> <div ng-class=::form.hintClass ng-if=::form.hint.length>{{::form.hint}}</div> </md-input-container>")}]),e.exports=a},function(e,t){var a="/material/checkbox.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,"<div class=\"checkbox schema-form-checkbox {{::form.htmlClass}}\" ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess()}\" sf-messages> <md-checkbox sf-field-model sf-changed=form ng-disabled=form.readonly schema-validate=form sf-material-class=md-checked class={{::form.fieldHtmlClass}} name={{::form.key|sfCamelKey}} aria-label={{::form.title}}> <span>{{::form.title}}</span> </md-checkbox> </div>")}]),e.exports=a},function(e,t){var a="/material/submit.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<section class="schema-form-submit {{::form.htmlClass}}" sf-messages> <md-button class="md-raised {{ form.style || \'md-primary\' }} {{::form.fieldHtmlClass}}" type={{::form.type}} ng-disabled=form.readonly aria-label={{::form.title}}> <md-tooltip ng-if=::form.tip>{{::form.tip}}</md-tooltip> {{::form.title}} </md-button> </section>')}]),e.exports=a},function(e,t,a){a(22),a(21),a(20)},function(e,t){var a="/material/actions.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<section layout=row class="btn-group schema-form-actions {{form.htmlClass}}"></section>')}]),e.exports=a},function(e,t){var a="/material/array.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div class="schema-form-array {{::form.htmlClass}}" sf-field-model=sf-new-array sf-new-array> <label class=control-label ng-show=showTitle()>{{ form.title }}</label> <md-list class=list-group sf-field-model ui-sortable=form.sortOptions> <md-list-item layout=row class=list-group-item sf-field-model=ng-repeat ng-repeat="item in modelArray track by $index" schema-form-array-items class={{::form.fieldHtmlClass}}> <md-button flex=none flex-order=2 type=button ng-hide="form.readonly || form.remove === null" ng-click=deleteFromArray($index) ng-disabled="form.schema.minItems >= modelArray.length" class=md-icon-button aria-label=More style=position:relative;z-index:20> <md-icon>close</md-icon> </md-button> </md-list-item> </md-list> <div class=clearfix style=padding:15px ng-model=modelArray schema-validate=form> <div class=help-block ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div> <md-button ng-hide="form.readonly || form.add === null" ng-click=appendToArray() ng-disabled="form.schema.maxItems <= modelArray.length" type=button class="btn md-raised md-primary {{ form.style.add || \'btn-default\' }} pull-right"> <i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}} </md-button> </div> </div>')}]),e.exports=a},function(e,t){var a="/material/autocomplete.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,"<div class=\"form-group {{::form.htmlClass}} schema-form-select\" ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess(), 'has-feedback': form.feedback !== false}\" sf-messages sf-layout> <md-autocomplete flex ng-disabled=form.readonly ng-model=$$value$$ sf-autocomplete sf-field-model=replaceAll schema-validate=form md-selected-item=$$value$$ md-search-text=searchText md-selected-item-change=\"'todo';\" md-items=\"item in evalExpr('this[\\''+form.optionFilter+'\\'](\\''+searchText+'\\')')\" md-item-text=item.name md-floating-label={{::form.title}} md-menu-class=autocomplete-custom-template> <md-item-template> <span md-highlight-text=searchText>{{item.name}}</span> </md-item-template> <md-not-found> No matches found </md-not-found> </md-autocomplete> </div>")}]),e.exports=a},function(e,t){var a="/material/checkboxes.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div sf-array=form sf-field-model class="form-group schema-form-checkboxes {{::form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}" sf-messages> <label class=control-label ng-show=showTitle()>{{::form.title}}</label> <div class=checkboxes sf-layout> <div class=checkbox ng-repeat="val in titleMapValues track by $index"> <md-checkbox ng-model=titleMapValues[$index] sf-changed=form ng-disabled="::form.readonly || form.titleMap[$index].readonly" ng-class=::form.fieldHtmlClass name={{::form.key|sfCamelKey}} ng-true-value=true ng-false-value=false aria-label={{::form.title}}> {{::form.titleMap[$index].name}} </md-checkbox> </div> </div> </div>')}]),e.exports=a},function(e,t){var a="/material/date.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div class="schema-form-date {{::form.htmlClass}}"> <label ng-show=showTitle() for={{::form.key|sfCamelKey}}>{{::form.title}}</label> <md-datepicker sf-field-model sf-changed=form schema-validate=form sf-type-parser=form.schema id={{::form.key|sfCamelKey}} ng-show=::form.key ng-class=::form.fieldHtmlClass ng-disabled=::form.readonly md-placeholder="Enter date" sf-messages> </md-datepicker> </div>')}]),e.exports=a},function(e,t){var a="/material/fieldset.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<fieldset ng-disabled=form.readonly class="standard {{form.htmlClass}}" flex> <legend ng-show=form.title>{{ form.title }}</legend> </fieldset>')}]),e.exports=a},function(e,t){var a="/material/help.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,"<div ng-class=\"['helpvalue', 'schema-form-helpvalue', form.htmlClass]\" ng-bind-html=form.helpvalue sf-layout></div>")}]),e.exports=a},function(e,t){var a="/material/radio-buttons.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div class="form-group schema-form-radiobuttons {{::form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}" sf-layout sf-messages> <div> <label class=control-label ng-show=showTitle()>{{form.title}}</label> </div> <section layout=row layout-sm=column layout-align="center center"> <md-input-container ng-repeat="item in form.titleMap"> <md-button type=button class="group md-raised" sf-field-model=replaceAll ng-model=$$value$$ sf-changed=form class="radio {{::form.fieldHtmlClass}}" ng-class="{\'md-primary\': ($$value$$ == item.value)}" ng-disabled=form.readonly ng-model-options=form.ngModelOptions schema-validate=form ng-value=item.value ng-click="$$value$$ = item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html=item.name></span> </md-button> </md-input-container> </section> </div>')}]),e.exports=a},function(e,t){var a="/material/radios-inline.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div class="form-group schema-form-radios-inline {{::form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}" sf-layout sf-messages> <label class=control-label ng-show=showTitle()>{{form.title}}</label> <md-radio-group layout=row sf-field-model=replaceAll ng-model=$$value$$ ng-class="[form.fieldHtmlClass, { active: item.value === $$value$$ }]" sf-changed=form schema-validate=form ng-disabled=form.readonly id="{{form.key.join(\'.\')}}" name="{{form.key.join(\'.\')}}"> <md-radio-button ng-repeat="item in form.titleMap" ng-value=item.value aria-label=item.name> <span ng-bind-html=item.name></span> </md-radio-button> </md-radio-group> </div>')}]),e.exports=a},function(e,t){var a="/material/radios.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div class="form-group schema-form-radios {{::form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}"> <label class=control-label ng-show=showTitle() aria-label={{form.title}} layout=row>{{form.title}}</label> <div> <md-radio-group sf-field-model sf-changed=form schema-validate=form ng-disabled=form.readonly id="{{form.key.join(\'.\')}}" name="{{form.key.join(\'.\')}}" sf-layout sf-messages> <md-radio-button ng-repeat="item in form.titleMap" ng-value=item.value class={{::form.fieldHtmlClass}} sf-field-model=ng-class aria-label=item.name ng-class="{ active: item.value === $$value$$ }"> <span ng-bind-html=item.name></span> </md-radio-button> </md-radio-group> </div> </div>')}]),e.exports=a},function(e,t){var a="/material/section.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<md-content class="schema-form-section {{::form.htmlClass}}" sf-layout> </md-content>')}]),e.exports=a},function(e,t){var a="/material/select.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,"<md-input-container class=\"form-group {{::form.htmlClass}} schema-form-select\" ng-class=\"{'has-error': hasError(), 'has-success': hasSuccess(), 'has-feedback': form.feedback !== false}\" sf-messages sf-layout> <label ng-show=::showTitle()>{{::form.title}}</label> <md-select sf-field-model sf-changed=form schema-validate=form ng-disabled=form.readonly> <md-optgroup ng-repeat-start=\"(key, opt) in form.titleMap | orderBy:'group' as optGroups\" ng-if=\"opt.group && opt.group != optGroups[key-1].group\" label={{::opt.group}} aria-label={{::opt.group}}> <md-option ng-repeat=\"(key, filtered) in form.titleMap | filter: {group: opt.group} | orderBy:'name' as opts\" ng-value=::filtered.value aria-label={{::filtered.name}}>{{::filtered.name}}</md-option> </md-optgroup> <md-option ng-if=!opt.group ng-value=::opt.value ng-repeat-end>{{::opt.name}}</md-option> </md-select> </md-input-container>")}]),e.exports=a},function(e,t){var a="/material/switch.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<md-input-container class="schema-form-switch {{::form.htmlClass}}"> <md-switch sf-field-model sf-changed=form sf-type-parser=form.schema sf-messages schema-validate=form id={{::form.key|sfCamelKey}} aria-label={{form.title}} ng-show=::form.key ng-class=form.fieldHtmlClass ng-disabled=::form.readonly> <span ng-show=showTitle() for={{::form.key|sfCamelKey}}>{{::form.title}}</span> </md-switch> </md-input-container>')}]),e.exports=a},function(e,t){var a="/material/tabarray.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div sf-array=form ng-init="selected = { tab: 0 }" class="clearfix schema-form-tabarray schema-form-tabarray-{{form.tabType || \'left\'}} {{::form.htmlClass}}"> <div ng-if="!form.tabType || form.tabType !== \'right\'" ng-class="{\'col-xs-3\': !form.tabType || form.tabType === \'left\'}"> <ul class="nav nav-tabs" ng-class="{ \'tabs-left\': !form.tabType || form.tabType === \'left\'}"> <li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"> <a href=#>{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a> </li> <li ng-hide=form.readonly ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"> <a href=#> <i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}} </a> </li> </ul> </div> <div ng-class="{\'col-xs-9\': !form.tabType || form.tabType === \'left\' || form.tabType === \'right\'}"> <div class="tab-content {{::form.fieldHtmlClass}}"> <div class="tab-pane clearfix" ng-repeat="item in modelArray track by $index" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"> <sf-decorator ng-init="arrayIndex = $index" form=copyWithIndex($index)></sf-decorator> <button ng-hide=form.readonly ng-click="selected.tab = deleteFromArray($index).length - 1" type=button class="btn {{ form.style.remove || \'btn-default\' }} pull-right"> <i class="glyphicon glyphicon-trash"></i> {{ form.remove || \'Remove\'}} </button> </div> </div> </div> <div ng-if="form.tabType === \'right\'" class=col-xs-3> <ul class="nav nav-tabs tabs-right"> <li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"> <a href=#>{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a> </li> <li ng-hide=form.readonly ng-click="$event.preventDefault() || appendToArray()"> <a href=#> <i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}} </a> </li> </ul> </div> </div>')}]),e.exports=a},function(e,t){var a="/material/tabs.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<div sf-field-model class="schema-form-tabs {{::form.htmlClass}}"> <md-tabs md-dynamic-height md-selected=selected md-autoselect ng-init="selected = 0"></md-tabs> </div>')}]),e.exports=a},function(e,t){var a="/material/textarea.html";window.angular.module("ng").run(["$templateCache",function(e){e.put(a,'<md-input-container class="{{::form.htmlClass}} schema-form-textarea" sf-messages sf-layout> <label ng-show=showTitle() for={{::form.key|sfCamelKey}}>{{::form.title}}</label> <textarea ng-class=::form.fieldHtmlClass id={{::form.key|sfCamelKey}} sf-changed=form ng-disabled=::form.readonly sf-field-model schema-validate=form name={{::form.key|sfCamelKey}}></textarea> </md-input-container>')}]),e.exports=a},function(e,t){function a(e,t){return{restrict:"A",scope:!1,link:function(e,a,r,l){function o(e,t){return e[t]}var n;try{n=e.form.key.reduce(o,e.model)}catch(e){n=void 0}t(function(){null!==n&&void 0!==n&&!1!==n&&a.addClass(r.sfMaterialClass)},0)}}}angular.module("schemaForm").directive("sfMaterialClass",a),a.$inject=["$compile","$timeout"]},function(e,t,a){"use strict";function r(e,t,a,r,n){function s(e){var t=e.fieldFrag.querySelector("[sf-layout]");e.form.grid&&Object.getOwnPropertyNames(e.form.grid).forEach(function(a,r,l){t.setAttribute(a,e.form.grid[a])})}function i(e){var t=e.fieldFrag.querySelector("[sf-messages]");if(t&&D){var a=D.cloneNode();t.appendChild(a)}}function m(e){var t=e.fieldFrag.querySelector("textarea"),a=e.form.maxlength||!1;t&&a&&t.setAttribute("md-maxlength",a)}function f(e){var t=e.fieldFrag.querySelector("md-autocomplete"),a=e.form.minLength||1,r=e.form.maxLength||!1,l=e.form.title||e.form.placeholder||e.form.key.slice(-1)[0];t&&(e.form.onChange&&(t.setAttribute("md-selected-item-change","args.form.onChange()"),t.setAttribute("md-search-text-change","args.form.onChange(searchText)")),t.setAttribute("md-min-length",a),r&&t.setAttribute("md-max-length",r),l&&t.setAttribute("md-floating-label",l))}function u(e){var t=e.fieldFrag.querySelector("md-switch");e.form.schema.titleMap&&(t.setAttribute("ng-true-value",e.form.schema.titleMap.true),t.setAttribute("ng-false-value",e.form.schema.titleMap.false))}function h(e){var t,a,a=e.fieldFrag.querySelector("md-select");if(e.form.selectOptions=[],e.form.getOptions=l,e.form.schema&&e.form.schema.links&&"object"==typeof e.form.schema.links){var r,n=/({)([^}]*)(})/gm;for(t=0;t<e.form.schema.links.length;t++)r=e.form.schema.links[t],"options"===r.rel&&(e.form.optionSource=r.href.replace(n,"$1$1 model.$2 $3$3"));a.setAttribute("sfm-external-options",e.form.optionSource)}else e.form.selectOptions=o(e.form)}function b(e){var t=e.fieldFrag.querySelector("md-datepicker");if(t){e.form.onChange&&t.setAttribute("ng-change","args.form.onChange(searchText)");var a=e.form.minimum||!1,r=e.form.maximum||!1;a&&t.setAttribute("md-max-date",a),r&&t.setAttribute("md-max-date",r)}}function y(e){if(e.form.tabs&&e.form.tabs.length>0){var t=e.fieldFrag.querySelector("md-tabs");e.form.tabs.forEach(function(a,r){var l="(evalExpr("+e.path+".tabs["+r+'].condition, { model: model, "arrayIndex": $index}))',o=document.createElement("md-tab");a.condition&&o.setAttribute("ng-if",l),o.setAttribute("label","{{"+e.path+".tabs["+r+"].title}}");var n=document.createElement("md-tab-body"),s=e.build(a.items,e.path+".tabs["+r+"].items",e.state);n.appendChild(s),o.appendChild(n),t.appendChild(o)})}}function $(t,a,l){if("string"===a.type&&("date"===a.format||"date-time"===a.format)){var o=e.stdFormObj(t,a,l);return o.key=l.path,o.type="date",l.lookup[r.stringify(l.path)]=o,o}}var C=a.builders.simpleTransclusion,A=a.builders.ngModelOptions,M=a.builders.ngModel,O=a.builders.sfField,S=a.builders.condition,K=a.builders.array,P=a.builders.numeric,s=s,D=function(){var e=document.createElement("div");return e.innerHTML='<div ng-if="ngModel.$invalid" ng-messages="ngModel.$error"><div sf-message ng-message></div></div>',e.firstChild}(),N=i,_=h,G=f,z=u,U=b,W=y,J=m,Q=[O,M,A,S,s],X=Q.concat(N),Y=Q.concat(K);e.defaults.string.unshift($),t.defineDecorator("materialDecorator",{actions:{template:d.a,builder:[O,C,S]},array:{template:c.a,builder:Y},autocomplete:{template:p.a,builder:X.concat(G)},boolean:{template:g.a,builder:X},button:{template:v.a,builder:X},checkbox:{template:g.a,builder:X},checkboxes:{template:x.a,builder:Y},date:{template:w.a,builder:X.concat(U)},default:{template:k.a,builder:X},fieldset:{template:T.a,builder:[O,C,S]},help:{template:E.a,builder:X},number:{template:k.a,builder:X.concat(P)},password:{template:k.a,builder:X},radios:{template:F.a,builder:X},"radios-inline":{template:j.a,builder:X},radiobuttons:{template:H.a,builder:X},section:{template:q.a,builder:[O,C,S,s]},select:{template:I.a,builder:X.concat(_)},submit:{template:v.a,builder:X},tabs:{template:B.a,builder:[O,W,S]},tabarray:{template:V.a,builder:Y},textarea:{template:R.a,builder:X.concat(J)},switch:{template:L.a,builder:X.concat(z)}})}function l(e,t){return e.optionData?t(e.optionData):e.selectOptions?e.selectOptions:[]}function o(e){var t=[];if(e.titleMap)return e.titleMap;if(e.enum&&e.enum.length)for(i=0;i<e.enum.length;i++)e.enum[i]&&e.enum[i].length&&t.push({name:e.enum[i],value:e.enum[i]});return t}function n(e){function t(t,a,r){r.$observe("sfmExternalOptions",function(a){e.get(a).then(function(e){t.form.selectOptions=o(e.data)})})}return{link:t,restrict:"A"}}function s(){return function(e){if(!e)return"";var t,a,r;for(r=e.slice(),a=0;a<r.length;a++)t=r[a].toLowerCase().split(""),a&&t.length&&(t[0]=t[0].toUpperCase()),r[a]=t.join("");return r.join("")}}Object.defineProperty(t,"__esModule",{value:!0});var m=a(4),d=a.n(m),f=a(5),c=a.n(f),u=a(6),p=a.n(u),h=a(1),g=a.n(h),b=a(2),v=a.n(b),y=a(7),x=a.n(y),$=a(8),w=a.n($),C=a(0),k=a.n(C),A=a(9),T=a.n(A),M=a(10),E=a.n(M),O=a(13),F=a.n(O),S=a(12),j=a.n(S),K=a(11),H=a.n(K),P=a(14),q=a.n(P),D=a(15),I=a.n(D),N=a(16),L=a.n(N),_=a(18),B=a.n(_),G=a(17),V=a.n(G),z=a(19),R=a.n(z);angular.module("schemaForm").config(r).directive("sfmExternalOptions",n).filter("sfCamelKey",s),r.$inject=["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider","$injector"],n.$inject=["$http"]},function(e,t){angular.module("schemaForm").directive("sfTypeParser",function(){return{restrict:"A",scope:!1,require:"ngModel",link:function(e,t,a,r){var l=e.$watch(a.sfTypeParser,function(e){if(e){var t=-1!==e.type.indexOf("number"),a=-1!==e.type.indexOf("integer"),o=/^[0-9]*$/;(t||a)&&r.$parsers.push(function(e){var a;return t?a=parseFloat(e):o.test(e)&&(a=parseInt(e,10)),console.log("parser",o.test(e),e,a),void 0===a||isNaN(a)?e:a}),l()}})}}})},,,,,,function(e,t,a){e.exports=a(3)}]);